{%- set connectors = accumulator['100_server_xml'][0] if '100_server_xml' in accumulator else {} -%}
{%- set realm = accumulator['110_server_xml'][0] if '110_server_xml' in accumulator else {} -%}
{%- set sites = accumulator['300_server_xml'][0] if '300_server_xml' in accumulator else {} -%}
{%- set resources = accumulator['500_server_xml'][0] if '500_server_xml' in accumulator else {} -%}
{%- set cluster = accumulator['600_server_xml'][0] if '600_server_xml' in accumulator else {} -%}
<?xml version='1.0' encoding='utf-8'?>
<!--

  This file is managed/autogenerated by salt.
  Manual changes risk being overwritten.

  Modify the salt pillar for the tomcat formula
  that generates this file instead.

-->
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html
 -->
<Server port="8005" shutdown="SHUTDOWN">
  <!-- Security listener. Documentation at /docs/config/listeners.html
  <Listener className="org.apache.catalina.security.SecurityListener" />
  -->
  {% if '200_server_xml' in accumulator %}
  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  {% endif %}

  {% if '400_server_xml' in accumulator %}
  <Listener className="org.apache.catalina.core.JasperListener" />
  {% endif %}

  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html
  -->
  <GlobalNamingResources>
    {% if resources -%}
    {% for id, params in resources.items() -%}
    <Resource
    {% for k, v in params.items() %}
              {{ k }}="{{ v }}"
    {%- endfor %}
    />
    {% endfor %}
    {% endif %}

    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">
    {% if connectors -%}
    {% for id, params in connectors.items() -%}
    <Connector
    {% for k, v in params.items() %}
               {{ k }}="{{ v }}"
    {%- endfor %}
    />
    {% endfor %}
    {% else %}
    <!-- Setting a default connector, as no connectors were defined in the formula -->
    <!-- A "Connector" represents an endpoint by which requests are received
         and responses are returned. Documentation at :
         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
         Java AJP  Connector: /docs/config/ajp.html
         APR (HTTP/AJP) Connector: /docs/apr.html
         Define a non-SSL HTTP/1.1 Connector on port 8080
    -->
    <Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               URIEncoding="UTF-8"
               redirectPort="8443"
    />
    {% endif %}
    <Engine name="Catalina" defaultHost="localhost"{% if cluster %} jvmRoute="{{ grains['nodename'] }}"{% endif %}>

    {% if realm -%}
      {%- for id, realm in realm.items() %}
        {%- set class_name = realm.name if realm.name is defined else id -%}
    <Realm className="{{ class_name }}"
         {%- if realm.realm_parameters is defined -%}
           {% for k, v in realm.realm_parameters.items() %}
           {{ k }}="{{ v }}"
           {%- endfor -%}
         {%- endif -%}
         >
         {%- if realm.value is defined %}
           {{ realm.value }}
         {%- endif %}

         {% if realm.realm is defined and realm.realm.name is defined %}
         {%- set subrealm = realm.realm -%}
            <Realm className="{{ subrealm.name }}"
             {%- if subrealm.realm_parameters is defined -%}
               {%  for k, v in subrealm.realm_parameters.items() %}
                {{ k }}="{{ v }}"
               {%- endfor -%}
             {%- endif -%}
             >
            {%- if subrealm.value is defined %}
                {{ subrealm.value }}
            {%- endif %}
            </Realm>
         {% endif -%}
    </Realm>
      {%- endfor -%}

    {% else %}
    <!-- Use the LockOutRealm to prevent attempts to guess user passwords
         via a brute-force attack -->
    <Realm className="org.apache.catalina.realm.LockOutRealm">
      <!-- This Realm uses the UserDatabase configured in the global JNDI
           resources under the key "UserDatabase".  Any edits
           that are performed against this UserDatabase are immediately
           available for use by the Realm.  -->
      <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
             resourceName="UserDatabase"
      />
    </Realm>
    {% endif %} 

    {% if cluster %}
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster" channelSendOptions="8">
          <Manager className="org.apache.catalina.ha.session.DeltaManager" expireSessionsOnShutdown="false" notifyListenersOnReplication="true"/>
              <Channel className="org.apache.catalina.tribes.group.GroupChannel">
                  <Membership className="org.apache.catalina.tribes.membership.McastService" address="228.0.0.4" port="45564" frequency="500" dropTime="3000"/>
                      <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
                          <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
                      </Sender>

                      <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver" address="auto" port="4000" autoBind="100" selectorTimeout="5000" maxThreads="6"/>

                      <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
                      <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor"/>

              </Channel>
              <Valve className="org.apache.catalina.ha.tcp.ReplicationValve" filter=""/>
              <Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>
              {# JvmRouteSessionIDBinderListener deprecated in tomcat >= 8 #}
              {% if '400_server_xml' in accumulator %}
              <ClusterListener className="org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener"/>
              {% endif %}
              <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
      </Cluster>
    {% endif %}

      {% if sites %}
      {% for id, site in sites.items() %}
      {%- set host_name = site.name if site.name is defined else id %}
      <Host name="{{ host_name }}"
          {%- for k, v in site.host_parameters.items()  %}
            {{ k }}="{{ v }}"
          {%- endfor %}>
            {%- if (site.path is defined and site.docBase is defined) %}
            <Context path="{{ site.path }}"
                     docBase="{{ site.docBase }}"
                     debug="{{ site.debug|default(0) }}"
                     reloadable="{{ site.reloadable|default(true) }}"
            />
            {% endif %}
            {%- if site.alias is defined %}
            <Alias>{{ site.alias }}</Alias>
            {% endif %}

            {%- if site.valves is defined %}
            {%- for valve in site.valves  %}
              <Valve
              {%- for k, v in valve.items() %}
                {{ k }}="{{ v }}"
              {%- endfor %} />
            {%- endfor %}
            {% endif %}
      </Host>
      {% endfor %}
      {% else %}
        <!-- Setting a default site, as no sites were defined in the formula -->
        <Host name="localhost"  appBase="webapps" unpackWARs="true" autoDeploy="true">
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="localhost_access_log." suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />
        </Host>
      {% endif %}
    </Engine>
  </Service>
</Server>
